%form.form-horizontal
  %fieldset
    %legend{'ng-hide'=>'currentProduct.isNew()'}=t('.update_header')
    %legend{'ng-show'=>'currentProduct.isNew()'}=t('.create_header')
    .control-group
      %label.control-label{for: 'productName'}
        =t('name', scope:'activerecord.attributes.product')
      .controls
        %input{type:'text', name:'name',id:'productName',
              placeholder:"#{t('.name')}", 
              'ng-model'=>'currentProduct.attributes.name'}
        =render partial: 'application/error_paragraph', 
                locals:{prefix: 'currentProduct.', key: 'name'}
    .control-group
      %label.control-label{for:'productDescription'}
        =t('description', scope:'activerecord.attributes.product')
      .controls
        %textarea{name:'description', id:'productDescription',
              placeholder:"#{t('.description')}", 
              'ng-model'=>'currentProduct.attributes.description'}
        =render partial: 'application/error_paragraph', 
                locals:{prefix: 'currentProduct.', key: 'description'}
    .control-group
      %label.control-label{for:'productGroup'}
        =t('group', scope:'activerecord.attributes.product')
      .controls
        %span
          %select.chzn-select{name:'group', id:'productGroup',
                'data-placeholder'=>"#{t('.group')}", 
                chosen:'currentProduct.attributes.group', 
                'ng-model'=>'currentProduct.attributes.group'}
            -Product.localized_groups.each_pair do |group, translation|
              %option{name:"#{group}",value:"#{group}"}
                =translation
        =render partial: 'application/error_paragraph', locals:{prefix: 'currentProduct.', key: 'group'}
    .control-group{'ng-repeat'=>'consists in currentProduct.attributes.consists_of_materials'}
      %label.control-label
        %a{'ng-click'=>'dialog.openWith(currentProduct.material(consists))'} 
          {{currentProduct.material(consists).attributes.name}}
      .controls
        .input-append
          %input{type:'number', 'ng-model'=>'consists.amount', min: 1}
          %button.btn.btn-danger{type:'button',
            'ng-click'=>'currentProduct.removeMaterial(consists)'}
            %i.icon-remove
    .control-group
      %label.control-label{for:'addMaterial'}
        =t ('.add_material')
      .controls
        %span
          %select.chzn-select{id:'addMaterial', 
            'data-placeholder'=>"#{t('.select_material_from_list')}",
            'ng-model'=>'latestAddedMaterialId', 
            'ng-change'=>'currentProduct.addMaterial(latestAddedMaterialId)',
            'ng-options'=>'m.attributes.id as m.attributes.name for m in materials()',
            chosen:"materials().length"}
        %button.btn.btn-primary.btn-small{type:'button',
          'ng-click'=>'dialog.openWith(newMaterial())'}
          = t('.create_material')
    .control-group
      .controls
        =render partial: 'application/status', locals: {prefix: 'currentProduct.'}
    .control-group
      .controls
        .btn-group
          %button.btn{'ng-click'=>'currentProduct.cancelChanges()'}
            =t('actions.cancel')
          %button.btn.btn-primary{'ng-click'=>'currentProduct.save()'}
            %span{'ng-show'=>'currentProduct.isNew()'}=t('.create')
            %span{'ng-hide'=>'currentProduct.isNew()'}=t('.update')

